[build-system]
requires = ["setuptools >= 45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nitransforms"
authors = [{name = "The NiPy developers", email = "nipreps@gmail.com"}]
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
description = "NiTransforms -- Neuroimaging spatial transforms in Python."
license = {text = "MIT License"}
requires-python = ">= 3.10"
dependencies = [
    "numpy >= 2.1",
    "scipy >= 1.8",
    "nibabel >= 5.2",
    "h5py >= 3.11",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/nipy/nitransforms"
Manuscript = "https://doi.org/10.31219/osf.io/8aq7b"
NiBabel = "https://github.com/nipy/nibabel/pull/656"

[project.optional-dependencies]
niftiext = ["lxml >= 4.6.4"]
test = [
    "pytest >= 6.2.5",
    "pytest-cov >= 2.11",
    "pytest-env",
    "pytest-xdist >= 2.5",
    "coverage[toml] >= 5.2.1",
    "nitransforms[niftiext]",
]
# Aliases
niftiexts = ["nitransforms[niftiext]"]
tests = ["nitransforms[test]"]
all = [
    "nitransforms[test]",
]

[project.scripts]
nb-transform = "nitransforms.cli:main"

[tool.setuptools.packages.find]
include = ["nitransforms*"]

[tool.setuptools_scm]
write_to = "nitransforms/_version.py"
write_to_template = """\
\"\"\"Version file, automatically generated by setuptools_scm.\"\"\"
__version__ = "{version}"
"""
fallback_version = "0.0"

[tool.pytest.ini_options]
minversion = "6"
testpaths = ["nitransforms"]
log_cli_level = "INFO"
xfail_strict = true
norecursedirs = [".git"]
addopts = [
  "-svx",
  "-ra",
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
  "--cov=nitransforms",
  "--cov-report=xml",
  "--cov-config=pyproject.toml",
]
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "nitransforms/conftest.py",
    "nitransforms/patched.py",
]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "warnings\\.warn",
]

[tool.flake8]
max-line-length = 99
doctests = false
ignore = [
    "E266",
    "E231",
    "W503",
]
